import { Roles } from 'src/common/constants/enums/roles.enum';
import { SellerType } from 'src/common/constants/enums/seller-types.enum';
import { CreatePermissionDto } from 'src/permissions/dto/create-permission.dto';
import { CreateProductVariantDto } from 'src/product-variants/dto/create-product-variant.dto';
import { CreateProductDto } from 'src/products/dto/create-product.dto';
import { CreateUserDto } from 'src/users/dto/create-user.dto';

export const PermissionsSeeder: CreatePermissionDto[] = [
  // BUYER permissions
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'user',
    write: false,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'comparative_product',
    write: true,
    read: true,
    update: true,
    delete: true,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'shopping_cart_item',
    write: true,
    read: true,
    update: true,
    delete: true,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'product',
    write: false,
    read: true,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'service',
    write: false,
    read: true,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'order',
    write: true,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'order_item',
    write: false,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'payment',
    write: true,
    read: true,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'refund',
    write: true,
    read: true,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'seller_account',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'variant_product',
    write: false,
    read: true,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'service_schedule',
    write: false,
    read: true,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'service_booking',
    write: false,
    read: true,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'payment_seller',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'seller_refund',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'refund_history',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'shopping_cart',
    write: false,
    read: true,
    update: false,
    delete: false,
  },
  {
    role: Roles.BUYER,
    seller_type: null,
    entity: 'image',
    write: false,
    read: false,
    update: false,
    delete: false,
  },

  // Store Seller Permissions
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'product',
    write: true,
    read: true,
    update: true,
    delete: true,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'variant_product',
    write: true,
    read: true,
    update: true,
    delete: true,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'order_item',
    write: false,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'user',
    write: false,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'seller_account',
    write: true,
    read: true,
    update: true,
    delete: true,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'image',
    write: true,
    read: true,
    update: false,
    delete: true,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'seller_refund',
    write: false,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'order',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'payment_seller',
    write: false,
    read: true,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'service',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'service_schedule',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'service_booking',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'refund',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'refund_history',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'shopping_cart',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'shopping_cart_item',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'comparative_product',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
    entity: 'payment',
    write: false,
    read: false,
    update: false,
    delete: false,
  },

  // Service Seller Permissions
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'service',
    write: true,
    read: true,
    update: true,
    delete: true,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'service_schedule',
    write: true,
    read: true,
    update: true,
    delete: true,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'service_booking',
    write: false,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'user',
    write: false,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'seller_account',
    write: true,
    read: true,
    update: true,
    delete: true,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'image',
    write: true,
    read: true,
    update: false,
    delete: true,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'refund',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'seller_refund',
    write: false,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'refund_history',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'shopping_cart',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'shopping_cart_item',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'comparative_product',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'payment',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'order',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'order_item',
    write: false,
    read: true,
    update: true,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'product',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'variant_product',
    write: false,
    read: false,
    update: false,
    delete: false,
  },
  {
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
    entity: 'payment_seller',
    write: false,
    read: true,
    update: false,
    delete: false,
  },
];

// users seeder data----------------------------------------------------------

export const UsersSeeder: CreateUserDto[] = [
  // Store sellers
  {
    name: 'tienda uno',
    email: 'tienda1@example.com',
    password: 'Abc1234*',
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
  },
  {
    name: 'tienda dos',
    email: 'tienda2@example.com',
    password: 'Abc1234*',
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
  },
  {
    name: 'tienda tres',
    email: 'tienda3@example.com',
    password: 'Abc1234*',
    role: Roles.SELLER,
    seller_type: SellerType.STORE,
  },

  // Service sellers
  {
    name: 'servicio uno',
    email: 'servicio1@example.com',
    password: 'Abc1234*',
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
  },
  {
    name: 'servicio dos',
    email: 'servicio2@example.com',
    password: 'Abc1234*',
    role: Roles.SELLER,
    seller_type: SellerType.SERVICE,
  },

  // Buyers
  {
    name: 'comprador uno',
    email: 'comprador1@example.com',
    password: 'Abc1234*',
    role: Roles.BUYER,
    seller_type: null,
  },
  {
    name: 'comprador dos',
    email: 'comprador2@example.com',
    password: 'Abc1234*',
    role: Roles.BUYER,
    seller_type: null,
  },
  {
    name: 'comprador tres',
    email: 'comprador3@example.com',
    password: 'Abc1234*',
    role: Roles.BUYER,
    seller_type: null,
  },
];

// products and its variants seeder data ---------------------------------------
export type seederProducts = {
  email_seller: string;
  product: CreateProductDto;
  variants?: Omit<CreateProductVariantDto, 'product_id'>[];
};

export const ProductsAndVariantsSeeder: seederProducts[] = [
  // seller/store: tienda1@example.com
  {
    email_seller: 'tienda1@example.com',
    product: {
      name: 'smartphone x',
      description: 'high-end smartphone with advanced features',
      reference: 'sm-x2024',
      size: 'l',
      color: 'black',
      price: 799.99,
      stock: 50,
    },
    variants: [
      {
        size: 'm',
        color: 'white',
        price: 799.99,
        stock: 30,
      },
      {
        size: 's',
        color: 'blue',
        price: 799.99,
        stock: 20,
      },
    ],
  },
  {
    email_seller: 'tienda1@example.com',
    product: {
      name: 'laptop pro',
      description: 'powerful laptop for professionals',
      reference: 'lp-pro2024',
      size: '15"',
      color: 'silver',
      price: 1299.99,
      stock: 20,
    },
    variants: [
      {
        size: '13"',
        color: 'space gray',
        price: 1199.99,
        stock: 15,
      },
    ],
  },
  {
    email_seller: 'tienda1@example.com',
    product: {
      name: 'tablet lite',
      description: 'lightweight tablet for everyday use',
      reference: 'tb-lite2024',
      size: '10"',
      color: 'black',
      price: 299.99,
      stock: 60,
    },
  },
  {
    email_seller: 'tienda1@example.com',
    product: {
      name: 'gaming monitor',
      description: '27-inch gaming monitor with 144hz refresh rate',
      reference: 'gm-27x2024',
      size: '27"',
      color: 'black',
      price: 399.99,
      stock: 25,
    },
  },
  {
    email_seller: 'tienda1@example.com',
    product: {
      name: 'wireless earbuds',
      description: 'noise-cancelling wireless earbuds',
      reference: 'we-2024',
      size: 'one size',
      color: 'white',
      price: 149.99,
      stock: 100,
    },
  },
  {
    email_seller: 'tienda1@example.com',
    product: {
      name: 'smartwatch pro',
      description: 'smartwatch with health monitoring features',
      reference: 'sw-pro2024',
      size: 'm',
      color: 'black',
      price: 249.99,
      stock: 40,
    },
  },

  // seller/store: tienda2@example.com
  {
    email_seller: 'tienda2@example.com',
    product: {
      name: 'smartphone x',
      description: 'high-end smartphone with advanced features',
      reference: 'sm-x2024',
      size: 'l',
      color: 'black',
      price: 789.99,
      stock: 40,
    },
    variants: [
      {
        size: 'm',
        color: 'white',
        price: 789.99,
        stock: 25,
      },
    ],
  },
  {
    email_seller: 'tienda2@example.com',
    product: {
      name: 'tablet lite',
      description: 'lightweight tablet for everyday use',
      reference: 'tb-lite2024',
      size: '10"',
      color: 'black',
      price: 299.99,
      stock: 60,
    },
  },
  {
    email_seller: 'tienda2@example.com',
    product: {
      name: 'gaming keyboard',
      description: 'mechanical gaming keyboard with rgb lighting',
      reference: 'gk-2024',
      size: 'standard',
      color: 'black',
      price: 99.99,
      stock: 75,
    },
  },
  {
    email_seller: 'tienda2@example.com',
    product: {
      name: 'bluetooth speaker',
      description: 'portable bluetooth speaker with 20-hour battery life',
      reference: 'bs-2024',
      size: 'one size',
      color: 'blue',
      price: 79.99,
      stock: 50,
    },
  },
  {
    email_seller: 'tienda2@example.com',
    product: {
      name: '4k smart tv',
      description: '55-inch 4k smart tv with hdr',
      reference: 'tv-55x2024',
      size: '55"',
      color: 'black',
      price: 699.99,
      stock: 15,
    },
  },

  // seller/store: tienda3@example.com
  {
    email_seller: 'tienda3@example.com',
    product: {
      name: 'smartphone x',
      description: 'high-end smartphone with advanced features',
      reference: 'sm-x2024',
      size: 'l',
      color: 'black',
      price: 809.99,
      stock: 35,
    },
    variants: [
      {
        size: 'm',
        color: 'white',
        price: 809.99,
        stock: 20,
      },
    ],
  },
  {
    email_seller: 'tienda3@example.com',
    product: {
      name: 'gaming monitor',
      description: '27-inch gaming monitor with 144hz refresh rate',
      reference: 'gm-27x2024',
      size: '27"',
      color: 'black',
      price: 399.99,
      stock: 25,
    },
  },
  {
    email_seller: 'tienda3@example.com',
    product: {
      name: 'wireless mouse',
      description: 'ergonomic wireless mouse with customizable buttons',
      reference: 'wm-2024',
      size: 'one size',
      color: 'black',
      price: 49.99,
      stock: 80,
    },
  },
  {
    email_seller: 'tienda3@example.com',
    product: {
      name: 'noise-cancelling headphones',
      description: 'over-ear headphones with active noise cancellation',
      reference: 'nc-2024',
      size: 'one size',
      color: 'black',
      price: 199.99,
      stock: 30,
    },
  },
  {
    email_seller: 'tienda3@example.com',
    product: {
      name: 'external ssd',
      description: '1tb external ssd with usb-c connectivity',
      reference: 'ssd-1tb2024',
      size: 'one size',
      color: 'silver',
      price: 129.99,
      stock: 40,
    },
  },
  {
    email_seller: 'tienda3@example.com',
    product: {
      name: 'smart thermostat',
      description: 'wi-fi enabled smart thermostat',
      reference: 'st-2024',
      size: 'one size',
      color: 'white',
      price: 149.99,
      stock: 20,
    },
  },
];
